workflows:
  ios-app-store:
    name: iOS App Store Build
    max_build_duration: 120
    instance_type: mac_mini_m1

    environment:
      groups:
        - ios
      vars:
        XCODE_PROJECT: "Unity-iPhone.xcodeproj"
        XCODE_SCHEME: "Unity-iPhone"
        APPLE_TEAM_ID: "JQ8ZF3V63Z"
      xcode: 15.0
      cocoapods: default

    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "main"
          include: true
          source: true

    cache:
      cache_paths:
        - ~/.cocoapods
        - ~/Library/Caches/CocoaPods

    scripts:
      - name: Clean Xcode caches
        script: |
          echo "üßπ Cleaning DerivedData and provisioning cache..."
          rm -rf ~/Library/Developer/Xcode/DerivedData/*
          rm -rf ~/Library/MobileDevice/Provisioning\ Profiles/*
          xcodebuild -list > /dev/null 2>&1 || true

      - name: Download libiPhone-lib.a from Google Drive
        script: |
          set -e
          FILE_ID="1KqTRS-jBMWM2VqRrUP7ZuDraaQCnhKgr"
          OUTPUT_PATH="Libraries/libiPhone-lib.a"

          echo "üì• Downloading libiPhone-lib.a from Google Drive..."
          mkdir -p Libraries
          pip3 install gdown --quiet || true
          gdown "https://drive.google.com/uc?id=${FILE_ID}" -O "${OUTPUT_PATH}"

          if [ -f "${OUTPUT_PATH}" ]; then
            echo "‚úÖ Successfully downloaded libiPhone-lib.a"
            ls -lh "${OUTPUT_PATH}"
          else
            echo "‚ùå Failed to download libiPhone-lib.a"
            exit 1
          fi

      - name: Set up code signing
        script: |
          echo "üîê Setting up signing..."
          set -e
          echo "$PROVISION_PROFILE_BASE64" | base64 --decode > /tmp/profile.mobileprovision
          PROFILE_UUID=$(grep UUID -A1 -a /tmp/profile.mobileprovision | grep -io "[-A-F0-9]\{36\}")
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp /tmp/profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$PROFILE_UUID.mobileprovision

          echo "$P12_BASE64" | base64 --decode > /tmp/certificate.p12
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security import /tmp/certificate.p12 -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain

          echo "‚úÖ Signing setup complete"

      - name: Install CocoaPods dependencies
        script: |
          echo "üì¶ Installing CocoaPods..."
          if [ -f "Podfile" ]; then
            pod deintegrate || true
            rm -rf Pods Podfile.lock
            pod install --repo-update
          else
            echo "‚ùå ERROR: Podfile not found!"
            exit 1
          fi

      - name: Xcode 15 provisioning bug workaround
        script: |
          echo "üß© Applying workaround for Xcode 15 provisioning bug..."
          rm -rf ~/Library/Developer/Xcode/DerivedData
          defaults write com.apple.dt.Xcode IDEPackageSupportUseBuiltinSCM YES
          find . -name "*.entitlements" -exec plutil -remove aps-environment {} \; 2>/dev/null || true
          echo "‚úÖ Workaround applied."

      - name: Build and export IPA
        script: |
          echo "üèóÔ∏è Building and exporting IPA..."
          set -e
          
          xcodebuild \
            -workspace "Unity-iPhone.xcworkspace" \
            -scheme "$XCODE_SCHEME" \
            -configuration Release \
            -archivePath "$HOME/build/Unity-iPhone.xcarchive" \
            archive \
            DEVELOPMENT_TEAM="$APPLE_TEAM_ID" \
            CODE_SIGN_STYLE=Manual \
            COMPILER_INDEX_STORE_ENABLE=NO \
            ENABLE_BITCODE=NO

          mkdir -p $HOME/export
          cat > $HOME/export/options.plist <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>app-store</string>
            <key>teamID</key>
            <string>$APPLE_TEAM_ID</string>
            <key>uploadSymbols</key>
            <true/>
            <key>uploadBitcode</key>
            <false/>
          </dict>
          </plist>
          EOF

          xcodebuild \
            -exportArchive \
            -archivePath "$HOME/build/Unity-iPhone.xcarchive" \
            -exportPath "$HOME/build" \
            -exportOptionsPlist "$HOME/export/options.plist"

          echo "‚úÖ IPA build complete"
          ls -lh "$HOME/build"/*.ipa || echo "‚ö†Ô∏è No IPA found!"

    artifacts:
      - $HOME/build/*.ipa
      - $HOME/build/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM

    publishing:
      email:
        recipients:
          - joshtimallendev@gmail.com
        notify:
          success: true
          failure: true

      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
